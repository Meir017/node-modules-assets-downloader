#!/usr/bin/env node

const request = require('request-promise');
const [, , nodeSassVersion] = process.argv;
const fs = require('fs');
const path = require('path');

if (!nodeSassVersion || !nodeSassVersion.startsWith('v')) {
    console.error('usage: download-node-sass <version>');
    process.exit(1);
}

const downloadsDirectory = './node-sass-assets';
if (!fs.existsSync(downloadsDirectory)) fs.mkdirSync(downloadsDirectory);

const baseUrl = 'https://api.github.com/repos/sass/node-sass/releases/tags';
const tagUrl = `${baseUrl}/${nodeSassVersion}`;

async function main() {
    const release = await request(tagUrl, {
        json: true,
        headers: {
            'User-Agent': 'download-node-sass'
        }
    });

    console.log('downloading release assets', {
        assets: release.assets.length,
        version: nodeSassVersion
    });
    for (const { name, browser_download_url } of release.assets) {
        console.log('downloading asset...', { name });

        downloadFile(name, browser_download_url);

        console.log('downloaded asset', { name });

        process.exit(0);
    }
}

async function downloadFile(filename, url) {
    const fullPath = path.join(downloadsDirectory, filename);
    if (fs.existsSync(fullPath)) {
        console.log('file already exists', { filename });
        return;
    };
    request(url, { resolveWithFullResponse: true, encoding: null })
        .pipe(fs.createWriteStream(fullPath));
}

main();